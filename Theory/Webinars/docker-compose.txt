мы бы хотели,

чтобы все необходимые настройки и параметры запуска вместе с проектом хранились.
Чтобы пришел в команду новый человек, а вы ему:
дядя, git clone сделай, а потом подними это всё одной командой

docker compose - часть технологии большого докера
это возможность написать конфиг для управления контейнерами,
это особенно важно, когда для приложения нужно несколько контейнеров

docker compose - консольная утилита, ставится вместе с докером, отдельно ставить не надо

команды

docker-compose up
старт всех сервисов

docker-compose down
остановка всех сервисов

важные опции файла docker-compose.yaml

services
список сервисов

image
образ для сборки контейнера

build
местоположение Dockerfile

depends_on
указание на последовательность запуска сервисов

environment
переменные окружения

volumes
маппинг папок и томов

ports
маппинг портов

command
команда для запуска внутри контейнера

демонстрация

пример часть 1

проект лежит на компьютере в папке ....../webinar-docker/
ее мы мапили в предыдущих примерах
проект открыт в PHPStorm
в корне проекта создается файл docker-compose.yaml

version: '3'
services:
    php:
        image: php:8.1-cli
        command: "php -S 0.0.0.0:8080"

в консоли, находясь в папке /webinar-docker/
убедившись через docker ps что никаких контейнеров не запущено
дать команду
docker-compose up --build

в примере указан образ и команда, которую в образе запустить
команду не всегда указывают, например для образа с базой данных,
потому что в нем команда уже будет прописана

если сейчас обратимся по адресу localhost:8080localhost:8080, ничего не увидим

пример у меня работает, консоль windows, но повисла

пример часть 2

пробрасываем порты, в коде конфига
        ports:
            - "8080:8080"
запустили docker-compose up --build
смотрим localhost:8080, работает

прокинуть volume, в коде конфига
        volumes:
            - ./:/app
        working_dir: /app
в docker-compose можно указывать относительные путь, на любоу ОС, не нужна магия с `pwd`,


version: '3'
services:
    php:
        image: php:8.1-cli
        ports:
            - "8080:8080"
        volumes:
            - ./:/app
        working_dir: /app
        command: "php -S 0.0.0.0:8080"

дать команду
docker-compose up --build
php скрипт работает на localhost:8080, из windows консоли не выйти

преимущество получили
файл docker-compose.yaml лежит внутри проекта,
мы его в гите добавляем и коммитим
(вместо запуска консоли и передачи консольных команд кому-то)
новый работник запускает проект командой docker-compose up --build -d

docker-compose down
все сервисы выключит и погасит

добились того, что окружение это часть приложения, файл внутри приложения

мы запустили один единственный процесс, php, в изолированном окружении
если бы я хотел запустить apache, я бы запустил еще один контейнер,
в котором сказал бы: собери его из ообраза с апачем и запускай
апач не необходимый сервер, будем запускать nginx

